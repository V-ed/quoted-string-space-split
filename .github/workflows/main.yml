name: CI

on:
  push:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pnpm-lock.yaml'
      - 'tsconfig.json'
      - '.github/workflows/main.yml'

env:
  NODE_VERSION: '18'
  PNPM_VERSION: 8

jobs:
  cache-modules:
    name: Cache Node Modules
    runs-on: ubuntu-latest

    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}

    steps:
      - name: Check for dupe action
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        continue-on-error: true

      - uses: actions/checkout@v4
        if: steps.skip_check.outputs.should_skip != 'true'

      - name: Install pnpm
        if: steps.skip_check.outputs.should_skip != 'true'
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@v4
        if: steps.skip_check.outputs.should_skip != 'true'
        id: setup-node
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install packages
        if: steps.skip_check.outputs.should_skip != 'true' && steps.setup-node.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --ignore-scripts

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [cache-modules]

    if: needs.cache-modules.outputs.should_skip != 'true' && contains(fromJson('["ved-bot", "renovate[bot]"]'), github.actor) == false

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install packages
        run: pnpm install

      - name: Lint Source
        run: pnpm run lint:src

      - name: Lint Tests
        run: pnpm run lint:tests

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [cache-modules]

    if: needs.cache-modules.outputs.should_skip != 'true'

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install packages
        run: pnpm install

      - name: Build
        run: pnpm run build

  test:
    name: Test and Coverage
    runs-on: ubuntu-latest
    needs: [cache-modules]

    if: needs.cache-modules.outputs.should_skip != 'true' && contains(fromJson('["ved-bot"]'), github.actor) == false

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install packages
        run: pnpm install

      - name: Test
        run: pnpm run test --coverage

      - name: Coveralls
        run: cat ./coverage/lcov.info | pnpx coveralls
        env:
          COVERALLS_REPO_TOKEN: '${{ secrets.COVERALLS_REPO_TOKEN }}'
